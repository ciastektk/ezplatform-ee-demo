{% extends ':blocks:_block.html.twig' %}

{% block block_identifier %}map{% endblock %}
{% block block_class %}{{ block_class }}{% endblock %}

{% block block_content %}
    <div class="places-map-block-view container">

        <div class="title">Destinations</div>

        <div class="places-map"></div>
        <div class="explore">
            <a href="{{ path(location) }}" class="btn btn-primary btn-lg btn-block">{{ 'Explore destinations'|trans }}</a>
        </div>
    </div>

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css"
          integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ=="
          crossorigin=""/>

    <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js"
            integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw=="
            crossorigin=""></script>
    <script>
        (function (global, doc) {
            const mapLoader = () => {
                const mapLocation = doc.querySelector('.places-map'),
                    map = global.L.map(mapLocation, {
                        zoom: 1.5,
                        zoomControl: false,
                        scrollWheelZoom: false,
                        dragging: false,
                        tap: false,
                        center: [40, 0],
                        view: [40, 0]
                    });
                map.doubleClickZoom.disable();

                {% if contentArray|length > 0 %}
                    {% for content in contentArray %}
                        global.L.marker([
                            parseFloat({{ ez_field_value( content, 'location' ).latitude }}),
                            parseFloat({{ ez_field_value( content, 'location' ).longitude }})
                        ], {
                            icon: new window.L.Icon.Default({
                                imagePath: '/bundles/ezplatformadminuiassets/vendors/leaflet/dist/images/'
                            }),
                            title: '{{ ez_render_field(content, "name")|striptags }}'
                        }).addTo(map);
                    {% endfor %}
                {% endif %}

                global.L.tileLayer('/assets/images/map_tile/{z}/{x}/{y}{r}.png', {
                    attribution: '&copy; <a href="http://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a> &copy; <a href="http://cartodb.com/attributions" target="_blank">CartoDB</a>',
                    maxZoom: 19,
                    noWrap: true
                }).addTo(map);
            };

            // if the page is not using iframe - load map
            if (global === global.parent) {
                mapLoader();
                return;
            }

            // wait for DOM to be ready
            let stateCheck = setInterval(() => {
                if (doc.readyState === 'complete') {
                    clearInterval(stateCheck);
                    mapLoader();
                }
            }, 100);

        })(window, document);
    </script>
{% endblock %}
